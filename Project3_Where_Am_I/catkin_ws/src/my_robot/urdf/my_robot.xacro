<?xml version="1.0"?>

<!-- Source:https://github.com/qboticslabs/mastering_ros/tree/master/chapter_2_codes/mastering_ros_robot_description_pkg -->

<robot name="my_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  

  <xacro:include filename="$(find my_robot)/urdf/wheel.xacro" /> 
  <xacro:include filename="$(find my_robot)/urdf/my_robot.gazebo" />

<!-- Defining the colors used in this robot -->
  <material name="Black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>

  <material name="Red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>

  <material name="White">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>

  <material name="Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>

  <material name="Orange">
    <color rgba="0.98 0.4 0.02 1.0"/>
  </material>

  <material name="Indigo" >
    <color rgba="0.22 0.01 0.51 1.0" />
  </material>

  <!-- PROPERTY LIST -->
  <!--All units in m-kg-s-radians unit system -->
  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:property name="M_PI_2" value="1.570796327" />
  <xacro:property name="DEG_TO_RAD" value="0.017453293" />

  <!-- Main body radius and height -->
  <!-- Main Body Cylinder base   -->
  <xacro:property name="base_height" value="0.05" /> 
  <xacro:property name="base_radius" value="0.15" /> 
  <xacro:property name="base_mass" value="5" /> <!-- in kg-->


  <!-- caster wheel radius and height -->
  <!-- caster wheel mass -->
  <xacro:property name="caster_f_height" value="0.04" /> 
  <xacro:property name="caster_f_radius" value="0.0199" /> 
  <xacro:property name="caster_f_mass" value="0.5" /> <!-- in kg-->


  <!-- caster wheel radius and height -->
  <!-- caster wheel mass -->
  <xacro:property name="caster_b_height" value="0.04" /> 
  <xacro:property name="caster_b_radius" value="0.0199" /> 
  <xacro:property name="caster_b_mass" value="0.5" /> <!-- in kg-->


  <!-- Wheels -->
  <xacro:property name="wheel_mass" value="2.5" /> --> <!-- in kg-->
  <xacro:property name="base_x_origin_to_wheel_origin" value="0.25" />
  <xacro:property name="base_y_origin_to_wheel_origin" value="0.3" />
  <xacro:property name="base_z_origin_to_wheel_origin" value="0.0" />


  <!-- Hokuyo Laser scanner -->
  <xacro:property name="hokuyo_size" value="0.08" />

  <!-- Camera -->
  <xacro:property name="camera_size" value="0.05" />
  <gazebo reference="camera">
    <material>Gazebo/Orange</material>
  </gazebo>

  <!-- Macro for calculating inertia of cylinder -->
  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" /> 
  </xacro:macro>


  <!-- BASE-FOOTPRINT -->
  <!-- robot_footprint is a fictitious link(frame) that is on the ground right below chassis origin -->
  <link name="robot_footprint">
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="0.001 0.001 0.001" />
        </geometry>
    </visual>
  </link>

  <gazebo reference="robot_footprint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="robot_footprint_joint" type="fixed">
    <origin xyz="0 0 ${wheel_radius - base_z_origin_to_wheel_origin}" rpy="0 0 0" />
    <parent link="robot_footprint"/>
    <child link="chassis" />
  </joint>
  
  <!-- BASE-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="chassis">
    <inertial>
      <mass value="${base_mass}" />
      <origin xyz="0 0 0" />
      <!--The 3x3 rotational inertia matrix. -->
        <cylinder_inertia  m="${base_mass}" r="${base_radius}" h="${base_height}" />
    </inertial>    
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
          <cylinder length="${base_height}" radius="${base_radius}" />
      </geometry>
      <material name="Indigo" />
    </visual>  
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0 " />
      <geometry>
          <cylinder length="${base_height}" radius="${base_radius}" />
      </geometry>
    </collision>     
  </link>
  <gazebo reference="chassis">
    <material>Gazebo/Indigo</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  
<!--Caster front  -->
  <link name="caster_front_link">
    <visual>
      <origin xyz="0 0.02 0" rpy="${M_PI/2} 0 0" />
      <geometry>
	      <sphere radius="${caster_f_radius}" />
      </geometry>
      <material name="Black" />
    </visual>  
    <collision>
      <geometry>
	      <sphere radius="${caster_f_radius}" />
      </geometry>
    <origin xyz="0 0.02 0" rpy="${M_PI/2} 0 0" />
    </collision>      
    <inertial>
      <mass value="${caster_f_mass}" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
               iyy="0.001" iyz="0.0" 
               izz="0.001" />
    </inertial>
  </link>


 <joint name="caster_front_joint" type="fixed">
      <parent link="chassis"/>
      <child link="caster_front_link"/>
      <origin xyz="0.115 0.0 0.00" rpy="${-M_PI/2} 0 0"/>
  </joint>


  <gazebo reference="caster_front_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
    


<!--Caster back  -->

  <link name="caster_back_link">

    <visual>
      <origin xyz="0.02 0.02 0" rpy="${M_PI/2} 0 0" /> 
      <geometry>
	      <sphere radius="${caster_b_radius}" />
      </geometry>
      <material name="Black" />
    </visual>
    <collision>
      <geometry>
		    <sphere radius="${caster_b_radius}" />
      </geometry>
    <origin xyz="0.02 0.02 0" rpy="${M_PI/2} 0 0" /> 
    </collision>      
    <inertial>
      <mass value="${caster_b_mass}" />
      <origin xyz="0 0 0" />        
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
               iyy="0.001" iyz="0.0" 
               izz="0.001" />
    </inertial>
  </link>

  <joint name="caster_back_joint" type="fixed">
    <parent link="chassis"/>
    <child link="caster_back_link"/>
    <origin xyz="-0.135 0.0 0.00" rpy="${-M_PI/2} 0 0"/>
  </joint>


  <gazebo reference="caster_back_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>


<!-- Wheel Definitions -->

  <wheel fb="front" lr="right" parent="chassis" translateX="0" translateY="0.5" flipY="1"/>
  <wheel fb="front" lr="left" parent="chassis" translateX="0" translateY="-0.5" flipY="1"/>
	 
  <!-- SENSORS -->
  
  <!-- hokuyo -->

  <link name="hokuyo">
    <inertial>
      <mass value="1e-5"/>
      <origin xyz="0.0 0 0" rpy="0 0 0"/>
      <inertia 
      	ixx="1e-6" ixy="0.0" ixz="0.0"
      	iyy="1e-6" iyz="0.0" izz="1e-6"
      />
    </inertial>
    <collision name='hokuyo_collision'>
      <origin xyz="0 0 0" rpy="0 0 0"/> 
      <geometry>
        <!--box size="${hokuyo_size} ${hokuyo_size} ${hokuyo_size}"/-->
        <mesh filename="package://my_robot/meshes/hokuyo.dae"/>
      </geometry>
    </collision>
    <visual name='hokuyo_visual'>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <!--box size="${hokuyo_size} ${hokuyo_size} ${hokuyo_size}"/-->
        <mesh filename="package://my_robot/meshes/hokuyo.dae"/>
      </geometry>
      <material name="Blue" />
    </visual>
  </link>

  <joint name="hokuyo_joint" type="fixed">
    <origin xyz="${base_radius/2} 0 ${base_height}" rpy="0 0 0" />
    <parent link="chassis"/>
    <child link="hokuyo" />
  </joint>

  <gazebo reference="hokuyo">
    <material>Gazebo/Blue</material>
  </gazebo>

  <!-- camera -->
  <joint name="camera_joint" type="fixed">
    <origin xyz="${base_radius + camera_size/2} 0 ${base_height/2}" rpy="0 0 0"/>
    <parent link="chassis"/>
    <child link="camera" />
    <axis xyz="0 1 0" rpy="0 0 0"/>
  </joint>

  <link name= "camera">
  	<inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia 
      	ixx="1e-6" ixy="0.0" ixz="0.0"
      	iyy="1e-6" iyz="0.0" izz="1e-6"
      />
    </inertial>
    <collision name='camera_collision'>
      <origin xyz="0 0 0" rpy="0 0 0"/> 
      <geometry>
        <box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
    </collision> 
    <visual name='camera_visual'>
      <origin xyz="0 0 0" rpy="0 0 0"/> 
      <geometry>
        <box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
      <material name="Orange" />
    </visual>   
  </link>

</robot>
